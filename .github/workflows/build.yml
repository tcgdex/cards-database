name: Build Docker image

on:
  push:

env:
  REGISTRY_IMAGE: |
    ghcr.io/tcgdex/server
    tcgdex/server

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build TCGdex Server
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          # fetch full history for `updated` support
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=branch,prefix=branch-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ !github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]' }}

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
        if: ${{ !github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
        
      - name: Pre build server
        run: |
          bun install --frozen-lockfile
          cd server
          bun install --frozen-lockfile
          bun run compile
          rm -rf node_modules
          cd ..
          rm -rf node_modules

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile.github-actions
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          push: ${{ !github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]' }}
          cache-to: type=gha,mode=max

